import telebot 
from forex_python.converter import CurrencyRates
import requests as r
from PIL import Image
from io import BytesIO


TOKEN = ''
bot = telebot.TeleBot(TOKEN, parse_mode='html')

COMMANDS = ['start', 'convert', 'get_coffee_picture', 'update_math_skills','get_smart_quote','shakal_picture']


@bot.message_handler(commands=COMMANDS)
def start_message(message) -> None:
    '''
        –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–∞—è –∫–æ–º–∞–Ω–¥—ã, –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    '''

    keyboard = get_main_keyboard()

    if message.text.lower() == '/start':
        bot.send_message(message.chat.id, f'<b color="red">{message.from_user.username}</b>, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ MIEMUniversalBot ü§© \n\n–î–∞–Ω–Ω—ã–π –±–æ—Ç –∏–º–µ–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –ø–æ–ª–µ–∑–Ω—ã—Ö –∫–æ–º–∞–Ω–¥, –≤—Å–µ –æ–Ω–∏ –ø—Ä–∏–≤–µ–¥–µ–Ω—ã –≤ —Å–ø–∏—Å–∫–µ –Ω–∏–∂–µ! \n\n/convert - –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤–∞–ª—é—Ç—ã!\n/get_coffee_picture - –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞–Ω–¥–æ–º–Ω–æ–π –∫–∞—Ä—Ç–∏–Ω–∫–∏ –∫–æ—Ñ–µ!\n/update_math_skills - –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–∫–∞—á–∫–∏ –±–æ–ª—å—à–æ–≥–æ —É–º–∞!\n/get_smart_quote - –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–∏—â–∏ –¥–ª—è —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏–π!\n/shakal_picture - –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è —à–∞–∫–∞–ª–∏–Ω–≥–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∏!', reply_markup=keyboard)
 
    elif message.text.lower() == '/convert':
        ask_for_pair(message)

    elif message.text.lower() == '/get_coffee_picture':
        get_coffee_picture(message)

    elif message.text.lower() == '/update_math_skills':
        update_math_skills(message)

    elif message.text.lower() == '/get_smart_quote':
        get_smart_quote(message)
    
    elif message.text.lower() == '/shakal_picture':
        ask_for_photo(message)

    else:
        bot.send_message(message.chat.id, "–ü–æ–∫–∞ —á—Ç–æ —è –Ω–µ –∑–Ω–∞—é, –∫–∞–∫ –Ω–∞ —Ç–∞–∫–æ–µ —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å!ü•∫")


@bot.message_handler(content_types=['text'])
def text_processing(message) -> None:
    '''
        –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ–±—ã–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    '''
    
    if '–∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å' in message.text.lower():
        ask_for_pair(message)

    elif '–∫–æ—Ñ–µ' in message.text.lower():
        get_coffee_picture(message)

    elif '—Ä–µ—à–∏—Ç—å' in message.text.lower() or '–ø—Ä–∏–º–µ—Ä' in message.text.lower() or '–º–∞—Ç–∞–Ω' in message.text.lower():
        update_math_skills(message)

    elif '—Ü–∏—Ç–∞—Ç' in message.text.lower() or '–ø–æ—É–º–Ω–∏—á–∞—Ç—å' in message.text.lower():
        get_smart_quote(message)

    elif '–Ω–∞—á–∞–ª' in message.text.lower():
        keyboard = get_main_keyboard()
        bot.send_message(message.chat.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –æ–±—Ä–∞—Ç–Ω–æ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üòµ‚Äçüí´', reply_markup=keyboard)

    elif '–ø–æ–¥—à–∞–º–∞–Ω' in message.text.lower() or '—à–∞–∫–∞–ª–∏—Ç—å' in message.text.lower():
        ask_for_photo(message)

    else:
        bot.send_message(message.chat.id, "–ü–æ–∫–∞ —á—Ç–æ —è –Ω–µ –∑–Ω–∞—é, –∫–∞–∫ –Ω–∞ —Ç–∞–∫–æ–µ —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å!ü•∫")

def get_main_keyboard() -> telebot.types.ReplyKeyboardMarkup:
    '''
        –§—É–Ω–∫—Ü–∏—è, –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∞—è –≥–ª–∞–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞
    '''

    main_keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    main_keyboard.row('–•–æ—á—É –∫–æ—Ñ–µ ‚òïÔ∏è', '–ú–Ω–µ –±—ã –≤–∞–ª—é—Ç—É –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å üí∂')
    main_keyboard.row('–ù–∞–¥–æ –∫ –º–∞—Ç–∞–Ω—É –≥–æ—Ç–æ–≤–∏—Ç—å—Å—è ü§Ø','–•–æ—á—É –ø–æ—É–º–Ω–∏—á–∞—Ç—å –ø–µ—Ä–µ–¥ –¥—Ä—É–∑—å—è–º–∏ ü•∏')
    main_keyboard.row('–ù–∞–¥–æ —á–µ—Ç–æ —Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π –ø–æ–¥—à–∞–º–∞–Ω–∏—Ç—å ü™Ñ')

    return main_keyboard

def ask_for_photo(message) -> None:
    bot.send_message(message.chat.id, f'–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–∞—Ä—Ç–∏–Ω–∫—É, –∫–æ—Ç–æ—Ä—É—é –Ω–∞–¥–æ –∑–∞—à–∞–∫–∞–ª–∏—Ç—å ·èá')
    bot.register_next_step_handler(message, picture_magic)

def picture_magic(message):
    keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('–•–æ—á—É —à–∞–∫–∞–ª–∏—Ç—å –µ—â–µüßê', '–•–æ—á—É –≤ –Ω–∞—á–∞–ª–æ ü•±')
    
    try:
        fileID = message.photo[0].file_id
        file_path = f"https://api.telegram.org/file/bot" + str(TOKEN) + "/" + str(bot.get_file(fileID).file_path)

        response = r.get(file_path)
        img = Image.open(BytesIO(response.content))

        bot.send_photo(message.chat.id, img)
        bot.send_message(message.chat.id, f'–î–∞ —ç—Ç–æ –∂–µ –∫–∞—Ä—Ç–∏–Ω–∫–∞ –Ω–∞ 10 —à–∞–∫–∞–ª–æ–≤ –∏–∑ 10, –Ω–µ –Ω–∞–¥–æ –±–ª–∞–≥–æ—Ä–∞–Ω–æ—Å—Ç–∏ ‚ëÄ', reply_markup=keyboard)
    except:
        bot.send_message(message.chat.id, f'–°–∫–∞–∑–∞–ª–∏ –∂–µ –∫–∞—Ä—Ç–∏–Ω–∫—É, –∞ –Ω–µ —á—Ç–æ-—Ç–æ –Ω–µ—è—Å–Ω–æ–µ ‚ëÄ', reply_markup=keyboard)
        

def get_smart_quote(message) -> None:
    '''
        –° –ø–æ–º–æ—â—å—é –¥–∞–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –ø–æ–ª—É—á–∏—Ç—å —É–º–Ω—É—é —Ü–∏—Ç–∞—Ç–∫—É
        –∏ –æ—Ç—è–∂–µ–ª–∏—Ç—å —Å–≤–æ–π –º–æ–∑–≥ —É–º–Ω—ã–º–∏ –º—ã—Å–ª—è–º–∏
    '''
    res = r.get('https://api.fisenko.net/v1/quotes/ru/random')

    if res.status_code == 200:
        try:
            expression = res.json()['text']
            author = res.json()['author']['name']
            
            keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
            keyboard.row('–î–∞–≤–∞–π –µ—â–µ –ø–æ –æ–¥–Ω–æ–π —Ü–∏—Ç–∞—Ç–∫–µ üßê', '–•–æ—á—É –≤ –Ω–∞—á–∞–ª–æ ü•±')

            bot.send_message(message.chat.id, f'–ö–∞–∫ –æ–¥–Ω–∞–∂–¥—ã —Å–∫–∞–∑–∞–ª <b>{author}</b>: <i>"{expression}"</i>. –ï—Å—Ç—å –Ω–∞–¥ —á–µ–º –ø–æ–¥—É–º–∞—Ç—å!\n\n–ú–æ–∂–µ—Ç –µ—â–µ –ø–æ –æ–¥–Ω–æ–π —Ü–∏—Ç–∞—Ç–∫–µ? üòè', reply_markup=keyboard)
            
        except:
            bot.send_message(message.chat.id, '–í–æ –≤—Ä–µ–º—è –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ API –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ ü•≤', reply_markup=get_main_keyboard())
    else:
        bot.send_message(message.chat.id, '–í–æ –≤—Ä–µ–º—è –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ API –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ ü•≤', reply_markup=get_main_keyboard())


def update_math_skills(message) -> None:
    '''
        –§—É–Ω–∫—Ü–∏—è —Ä–µ–∞–ª–∏–∑—É—é—â–∞—è –ø—Ä–æ–∫–∞—á–∫—É –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–∫–∏–ª–ª–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    '''

    res = r.get('https://x-math.herokuapp.com/api/random')

    if res.status_code == 200:
        try:
            expression = res.json()['expression']
            answer = int(res.json()['answer'])

            bot.send_message(message.chat.id, f'–í–∞–º –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç—Å—è —Ä–µ—à–∏—Ç—å –¥–∞–Ω–Ω—ã–π –ø—Ä–∏–º–µ—Ä –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è —Å–≤–æ–µ–π —Å–∫–æ—Ä–æ—Å—Ç–∏ —Å—á–µ—Ç–∞, —á–µ–º –±—ã—Å—Ç—Ä–µ–µ —Ä–µ—à–∏—Ç–µ, —Ç–µ–º –ª—É—á—à–µ! ü§ì\n\n<b>{expression} = ?</b>\n\n–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ –æ—Ç–≤–µ—Ç üßê', reply_markup=None)
            bot.register_next_step_handler(message, check_math_answer, answer)

        except:
            bot.send_message(message.chat.id, '–í–æ –≤—Ä–µ–º—è –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ API –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ ü•≤',reply_markup=get_main_keyboard())
    else:
        bot.send_message(message.chat.id, '–í–æ –≤—Ä–µ–º—è –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ API –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ ü•≤', reply_markup=get_main_keyboard())

def check_math_answer(message, answer) -> None:
    '''
        –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤—Ç–µ–ª—è –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏
    '''
    
    keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('–†–µ—à–∏—Ç—å –µ—â–µ –ø—Ä–∏–º–µ—Ä üò±', '–•–æ—á—É –≤ –Ω–∞—á–∞–ª–æ ü•±')

    try:
        user_answer = int(message.text)
    
        if user_answer == answer:
            bot.send_message(message.chat.id, f'<b>{message.from_user.username}</b>, –¥–∞ –≤—ã —Å—É–ø–µ—Ä –º–µ–≥–∞ –∫—Ä—É—Ç–æ–π üò∂‚Äçüå´Ô∏è\n–ù–µ —Ö–æ—Ç–∏—Ç–µ —Ä–µ—à–∏—Ç—å –µ—â–µ –ø—Ä–∏–º–µ—Ä—á–∏–∫?', reply_markup=keyboard)
        else:
            bot.send_message(message.chat.id, f'<b>{message.from_user.username}</b>, —ç—Ç–æ –±—ã–ª–æ –æ—á–µ–Ω—å –±–ª–∏–∑–∫–æ, –Ω–æ –Ω–µ—Çüò£ \n –ù–µ —Ö–æ—Ç–∏—Ç–µ —Ä–µ—à–∏—Ç—å –µ—â–µ –ø—Ä–∏–º–µ—Ä—á–∏–∫?', reply_markup=keyboard)

    except:
        bot.send_message(message.chat.id, '–ü–æ—Ö–æ–∂–µ, —á—Ç–æ –≤—ã –≤–≤–æ–¥–∏—Ç–µ –Ω–µ —á–∏—Å–ª–æ!ü•≤\n–ü–æ–ø—Ä–æ–±—É–µ–º –µ—â–µ —Ä–∞–∑–∏–∫?', reply_markup=keyboard)

def get_coffee_picture(message) -> None:
    '''
        –§—É–Ω–∫—Ü–∏—è, –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∞—è —Ä–∞–Ω–¥–æ–º–Ω—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É –∫–æ—Ñ–µ
    '''
    
    res = r.get('https://coffee.alexflipnote.dev/random.json')

    if res.status_code == 200:
        try:
            keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
            keyboard.row('–ï—â–µ –∫–æ—Ñ–µ ü•¥', '–•–æ—á—É –≤ –Ω–∞—á–∞–ª–æ ü•±')

            bot.send_photo(message.chat.id, res.json()['file'])
            bot.send_message(message.chat.id, '–í–æ—Ç –≤–∞—à–∞ —Ñ–æ—Ç–æ—á–∫–∞ –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ–≥–æ –Ω–∞–ø–∏—Ç–∫–∞! ü§™', reply_markup=keyboard)
        except:
            bot.send_message(message.chat.id, '–í–æ –≤—Ä–µ–º—è –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ API –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ ü•≤', reply_markup=get_main_keyboard())
    else:
        bot.send_message(message.chat.id, '–í–æ –≤—Ä–µ–º—è –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ API –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ ü•≤', reply_markup=get_main_keyboard())

def ask_for_pair(message) -> None:
    '''
        –§—É–Ω–∫—Ü–∏—è, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–π –º—ã —Å—Ç—Ä–∞—à–∏–≤–∞–µ–º —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–∞–ª—é—Ç–Ω—É—é –ø–∞—Ä—É.
    '''
    
    keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('USD RUB', 'EUR RUB', 'GBP RUB')
    keyboard.row('USD GBP', 'EUR GBP', 'EUR USD')

    bot.send_message(message.chat.id, f'<b>{message.from_user.username}</b>, –≤—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –≤–∞—Å –≤–∞–ª—é—Ç–Ω—É—é –ø–∞—Ä—É –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ –∏–ª–∏ –≤–ø–∏—à–∏—Ç–µ —Å–≤–æ—é ü§© \n\n –ü—Ä–∏–º–µ—Ä <b>EUR USD</b>', reply_markup=keyboard)
    bot.register_next_step_handler(message, prep_pair)


def prep_pair(message) -> None:
    '''
        –§—É–Ω–∫—Ü–∏—è –ø—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    '''
    
    user_prep = list(map(lambda x: x.upper(), filter(lambda x: x != ' ' or x != '', message.text.strip().split(' '))))    
    
    if len(user_prep) != 2:
        bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞ –≤ –≤–≤–æ–¥–µ! üôÅ\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É!', reply_markup=get_main_keyboard())
    else:
        bot.send_message(message.chat.id,"–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É, –∫–æ—Ç–æ—Ä—É—é –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ ü•∂")
        bot.register_next_step_handler(message, convert, user_prep)

def convert(message, pair) -> None:
    '''
        –§—É–Ω–∫—Ü–∏—è –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ–π –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤–∞–ª—é—Ç—ã    
    '''

    try:
        money_amount = abs(float(message.text))
    except:
        bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞ –≤ –≤–≤–æ–¥–µ! üôÅ\n–°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —á–∏—Å–ª–æ–≤—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º!', reply_markup=get_main_keyboard())

    c = CurrencyRates()
    curr_1 = pair[0]
    curr_2 = pair[1]
    try:
        rate = c.get_rate(curr_1, curr_2)
        
        keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.row('–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –µ—â–µ üëÅ','–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –Ω–∞—á–∞–ª—É üßê')

        bot.send_message(message.chat.id, f'–†–µ–∑—É–ª—å—Ç–∞—Ç –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –ø–æ –ø–∞—Ä–µ <b>{curr_1} {curr_2}</b>:\n\n <b>{money_amount} {curr_1} = {(rate * money_amount):.2f} {curr_2}</b>', reply_markup=keyboard)
    except:
        bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞ –≤ –≤–≤–æ–¥–µ! üôÅ\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É!', reply_markup=get_main_keyboard())

        
bot.polling()

